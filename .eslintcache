[{"C:\\React Projects\\Stonks\\src\\index.js":"1","C:\\React Projects\\Stonks\\src\\App.js":"2","C:\\React Projects\\Stonks\\src\\theme.js":"3","C:\\React Projects\\Stonks\\src\\Pages\\Error.js":"4","C:\\React Projects\\Stonks\\src\\Pages\\Home.js":"5","C:\\React Projects\\Stonks\\src\\Pages\\Signup.js":"6","C:\\React Projects\\Stonks\\src\\Pages\\Login.js":"7","C:\\React Projects\\Stonks\\src\\Components\\Nav.js":"8","C:\\React Projects\\Stonks\\src\\Pages\\Dashboard.js":"9","C:\\React Projects\\Stonks\\src\\Components\\UserAccountTable.js":"10","C:\\React Projects\\Stonks\\src\\Components\\SignUpForm.js":"11","C:\\React Projects\\Stonks\\src\\Components\\LoginForm.js":"12","C:\\React Projects\\Stonks\\src\\Util\\apiClient.js":"13","C:\\React Projects\\Stonks\\src\\Components\\DetailedStockView.js":"14","C:\\React Projects\\Stonks\\src\\Components\\BasicStockView.js":"15","C:\\React Projects\\Stonks\\src\\Components\\SearchBar.js":"16","C:\\React Projects\\Stonks\\src\\Components\\Watchlist.js":"17","C:\\React Projects\\Stonks\\src\\Components\\SellPrompt.js":"18","C:\\React Projects\\Stonks\\src\\Components\\BuyPrompt.js":"19","C:\\React Projects\\Stonks\\src\\Components\\FeaturedTable.js":"20","C:\\React Projects\\Stonks\\src\\Components\\Portfolio.js":"21","C:\\React Projects\\Stonks\\src\\Components\\MoversTable.js":"22","C:\\React Projects\\Stonks\\src\\Components\\DetailedStockTable.js":"23","C:\\React Projects\\Stonks\\src\\Components\\BasicStockTable.js":"24"},{"size":451,"mtime":1615171884739,"results":"25","hashOfConfig":"26"},{"size":2502,"mtime":1615231460623,"results":"27","hashOfConfig":"26"},{"size":191,"mtime":1615171884741,"results":"28","hashOfConfig":"26"},{"size":168,"mtime":1615171884740,"results":"29","hashOfConfig":"26"},{"size":1572,"mtime":1615231321540,"results":"30","hashOfConfig":"26"},{"size":4712,"mtime":1615159982402,"results":"31","hashOfConfig":"26"},{"size":4410,"mtime":1615231591803,"results":"32","hashOfConfig":"26"},{"size":3233,"mtime":1615223409943,"results":"33","hashOfConfig":"26"},{"size":6560,"mtime":1615236661681,"results":"34","hashOfConfig":"26"},{"size":1689,"mtime":1615187796067,"results":"35","hashOfConfig":"26"},{"size":3443,"mtime":1615225178885,"results":"36","hashOfConfig":"26"},{"size":2654,"mtime":1615231499405,"results":"37","hashOfConfig":"26"},{"size":3199,"mtime":1615231321541,"results":"38","hashOfConfig":"26"},{"size":2567,"mtime":1615231483441,"results":"39","hashOfConfig":"26"},{"size":2156,"mtime":1615231321538,"results":"40","hashOfConfig":"26"},{"size":780,"mtime":1615171884738,"results":"41","hashOfConfig":"26"},{"size":3448,"mtime":1615234539875,"results":"42","hashOfConfig":"26"},{"size":4569,"mtime":1615231321539,"results":"43","hashOfConfig":"26"},{"size":3974,"mtime":1615238247716,"results":"44","hashOfConfig":"26"},{"size":2285,"mtime":1615236986644,"results":"45","hashOfConfig":"26"},{"size":3853,"mtime":1615231321539,"results":"46","hashOfConfig":"26"},{"size":2286,"mtime":1615237000397,"results":"47","hashOfConfig":"26"},{"size":1766,"mtime":1615187122915,"results":"48","hashOfConfig":"26"},{"size":1433,"mtime":1615186992544,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1xlhfjx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\React Projects\\Stonks\\src\\index.js",[],["103","104"],"C:\\React Projects\\Stonks\\src\\App.js",[],"C:\\React Projects\\Stonks\\src\\theme.js",[],"C:\\React Projects\\Stonks\\src\\Pages\\Error.js",[],"C:\\React Projects\\Stonks\\src\\Pages\\Home.js",[],"C:\\React Projects\\Stonks\\src\\Pages\\Signup.js",["105","106"],"import React, { Component } from \"react\";\r\nimport { Button, Typography, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles'\r\nimport UserAccountTable from '../Components/UserAccountTable'\r\nimport SignUpForm from '../Components/SignUpForm'\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = theme => ({\r\n  loginModule: {\r\n    backgroundColor: '#8C92AC',\r\n    alignItems: \"center\",\r\n  },\r\n  loginHeader: {\r\n    color: 'black'\r\n  },\r\n  backgroundStyle: {\r\n    backgroundColor: '#E5E5E5'\r\n  },\r\n  navButtons: {\r\n  }\r\n}) \r\n\r\nclass Signup extends Component {\r\n\r\n  state = {\r\n    characters: [\r\n\r\n    ],\r\n    open: false\r\n  } \r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/users')\r\n     .then(res => {\r\n       const characters = res.data.users_list;\r\n       this.setState({ characters });\r\n     })\r\n     .catch(function (error) {\r\n       //Not handling the error. Just logging into the console.\r\n       console.log(error);\r\n     });\r\n  }\r\n\r\n  handleSubmit = character => {\r\n    this.makePostCall(character).then( callResult => {\r\n       if (callResult[0] === true) {\r\n          character['id'] = callResult[1]['id']\r\n          character['username'] = callResult[1]['username']\r\n          character['firstname'] = callResult[1]['firstname']\r\n          character['lastname'] = callResult[1]['lastname']\r\n          character['password'] = callResult[1]['password']\r\n          this.setState({ characters: [...this.state.characters, character] });\r\n          this.handleRegSuccess(character)\r\n       }\r\n       else {\r\n        this.handleRegError()\r\n       }\r\n    });\r\n  }\r\n\r\n  handleRegError = () => {\r\n    console.log(\"signup error!\")\r\n    this.setState({open : true})\r\n  }\r\n\r\n  handleRegSuccess = character => {\r\n    this.props.handleLogin(character)\r\n  }\r\n\r\n  removeCharacter = index => {\r\n    const { characters } = this.state\r\n    \r\n    this.makeDelCall(characters, index).then( callResult => {\r\n      if (callResult === true) {\r\n        this.setState({\r\n          characters: characters.filter((character, i) => {\r\n            return i !== index\r\n          }),\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  makePostCall(character){\r\n    return axios.get('http://localhost:5000/c_acc/' + character['firstname'] + '/' + character['lastname'] + '/'\r\n                    + character['username'] + '/' + character['password'])\r\n     .then(function (response) {\r\n       console.log(response);\r\n       return [response.status === 201, response.data]\r\n     })\r\n     .catch(function (error) {\r\n       console.log(error);\r\n       return false;\r\n     });\r\n  }\r\n\r\n  makeDelCall(characters, index) {\r\n    return axios.delete('http://localhost:5000/users', { data: characters[index] })\r\n    .then(function (response) {\r\n      console.log(response);\r\n      return response.status === 200\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      return false\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props\r\n    const { characters } = this.state\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n          <Grid item container>\r\n            <Grid item xs={3}></Grid>\r\n\r\n            <Grid className={classes.loginModule} item container xs={6} direction=\"column\">\r\n            <Collapse in={this.state.open}>\r\n                <Alert\r\n                severity=\"error\"\r\n                action={\r\n                <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  this.setState({open: false});\r\n                }}\r\n                >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n                }\r\n                >\r\n                Username already taken!\r\n                </Alert>\r\n              </Collapse>\r\n              <Grid item className={classes.navButtons}>\r\n                <Button component={Link} to=\"/login\" size=\"large\" variant=\"outlined\"> Login </Button>\r\n                <Button component={Link} to=\"/signup\" disabled size=\"large\" variant=\"outlined\"> Sign Up </Button>\r\n              </Grid>\r\n\r\n              <Typography variant=\"h3\" className={classes.loginHeader}>Sign Up</Typography> \r\n              <SignUpForm handleSubmit={this.handleSubmit}/>\r\n            </Grid>\r\n            \r\n            <Grid item xs={3}></Grid>\r\n          </Grid>\r\n        </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Signup);\r\n","C:\\React Projects\\Stonks\\src\\Pages\\Login.js",["107","108","109","110","111"],"import React, { useState } from 'react'\r\nimport { Button, Typography, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport LoginForm from '../Components/LoginForm'\r\nimport axios from 'axios'\r\nimport UserAccountTable from '../Components/UserAccountTable'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles({\r\n  loginModule: {\r\n    backgroundColor: '#8C92AC',\r\n    alignItems: 'center'\r\n  },\r\n  loginHeader: {\r\n    color: 'black'\r\n  },\r\n  backgroundStyle: {\r\n    backgroundColor: '#E5E5E5'\r\n  },\r\n  formStyle: {\r\n  },\r\n  submitStyle: {\r\n    backgroundColor: '#A7A5A5',\r\n    color: 'black'\r\n  },\r\n  navButtons: {\r\n  }\r\n})\r\n\r\nfunction Login (props) {\r\n  const [characters, setCharacters] = useState([])\r\n  const [open, setOpen] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  const componentDidMount = () => {\r\n    axios.get('http://localhost:5000/users')\r\n      .then(res => {\r\n        const characters = res.data.users_list\r\n        setCharacters({ characters })\r\n      })\r\n      .catch(function (error) {\r\n        // Not handling the error. Just logging into the console.\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const removeCharacter = index => {\r\n    const { characters } = characters\r\n\r\n    makeDelCall(characters, index).then(callResult => {\r\n      if (callResult === true) {\r\n        setCharacters({\r\n          characters: characters.filter((character, i) => {\r\n            return i !== index\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const makeDelCall = (characters, index) => {\r\n    return axios.delete('http://localhost:5000/users', { data: characters[index] })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        return response.status === 200\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        return false\r\n      })\r\n  }\r\n\r\n  const handleSubmit = character => {\r\n    makePostCall(character).then(callResult => {\r\n      if (callResult[0] === true) {\r\n        character.id = callResult[1].id\r\n        character.username = callResult[1].username\r\n        character.firstname = callResult[1].firstname\r\n        character.lastname = callResult[1].lastname\r\n        character.password = callResult[1].password\r\n        handleLoginSuccess(character)\r\n      } else {\r\n        handleLoginError()\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleLoginError = () => {\r\n    console.log('login error')\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleLoginSuccess = character => {\r\n    props.handleLogin(character)\r\n  }\r\n\r\n  const makePostCall = character => {\r\n    return axios.get('http://localhost:5000/login/' + character.username + '/' + character.password)\r\n      .then(function (response) {\r\n        console.log(response)\r\n        return [response.status === 201, response.data]\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        return false\r\n      })\r\n  }\r\n  return (\r\n    <Grid container direction='column'>\r\n      <Grid item container>\r\n        <Grid item xs={3} />\r\n\r\n        <Grid className={classes.loginModule} item container xs={6} direction='column'>\r\n          <Collapse in={open}>\r\n            <Alert\r\n              severity='error'\r\n              action={\r\n                <IconButton\r\n                  aria-label='close'\r\n                  color='inherit'\r\n                  size='small'\r\n                  onClick={() => {\r\n                    setOpen(false)\r\n                  }}\r\n                >\r\n                  <CloseIcon fontSize='inherit' />\r\n                </IconButton>\r\n                }\r\n            >\r\n              Username or Password Incorrect!\r\n            </Alert>\r\n          </Collapse>\r\n          <Grid item className={classes.navButtons}>\r\n            <Button component={Link} to='/login' disabled size='large' variant='outlined'> Login </Button>\r\n            <Button component={Link} to='/signup' size='large' variant='outlined'> Sign Up </Button>\r\n          </Grid>\r\n\r\n          <Typography variant='h3' className={classes.loginHeader}>Login</Typography>\r\n          <LoginForm handleSubmit={handleSubmit} />\r\n        </Grid>\r\n\r\n        <Grid item xs={3} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\React Projects\\Stonks\\src\\Components\\Nav.js",[],"C:\\React Projects\\Stonks\\src\\Pages\\Dashboard.js",[],"C:\\React Projects\\Stonks\\src\\Components\\UserAccountTable.js",[],"C:\\React Projects\\Stonks\\src\\Components\\SignUpForm.js",[],"C:\\React Projects\\Stonks\\src\\Components\\LoginForm.js",[],"C:\\React Projects\\Stonks\\src\\Util\\apiClient.js",[],"C:\\React Projects\\Stonks\\src\\Components\\DetailedStockView.js",[],"C:\\React Projects\\Stonks\\src\\Components\\BasicStockView.js",[],"C:\\React Projects\\Stonks\\src\\Components\\SearchBar.js",[],"C:\\React Projects\\Stonks\\src\\Components\\Watchlist.js",[],"C:\\React Projects\\Stonks\\src\\Components\\SellPrompt.js",["112"],"import React from 'react'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport axios from 'axios'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { red } from '@material-ui/core/colors'\r\n\r\nfunction getModalStyle () {\r\n  const top = 50\r\n  const left = 50\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  }\r\n}\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(red[400]),\r\n    backgroundColor: red[400],\r\n    '&:hover': {\r\n      backgroundColor: red[600]\r\n    },\r\n    float: 'right',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    height: 40,\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    padding: '0 5px',\r\n    boxShadow: '2 1px 1px 1px black'\r\n  }\r\n}))(Button)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3)\r\n  }\r\n}))\r\n\r\nfunction SellPrompt (props) {\r\n  const classes = useStyles()\r\n  const [modalStyle] = React.useState(getModalStyle)\r\n  const [open, setOpen] = React.useState(false)\r\n  const [openAlert, setOpenAlert] = React.useState(false)\r\n  const [openAlert0, setOpenAlert0] = React.useState(false)\r\n\r\n  const [sellVolume, setsellVolume] = React.useState(0)\r\n  const currentStock = props.currentStock\r\n\r\n  const loggedUsername = props.loggedUsername\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target\r\n    setsellVolume(value)\r\n  }\r\n\r\n  const submitForm = event => {\r\n    event.preventDefault()\r\n    sellOrder()\r\n  }\r\n\r\n  const sellOrder = () => {\r\n    return axios.get('http://localhost:5000/sell/' + loggedUsername + '/' +\r\n        currentStock.ticker + '/' + sellVolume)\r\n      .then(function (response) {\r\n        console.log(response)\r\n        if (response.data.success === true) {\r\n          window.location.reload()\r\n          return [response.status === 201, response.data]\r\n        } else if (response.data.error === 99) {\r\n          setOpenAlert0(true)\r\n        } else {\r\n          setOpenAlert(true)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        return false\r\n      })\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Collapse in={openAlert0}>\r\n        <Alert\r\n          severity='error'\r\n          action={\r\n            <IconButton\r\n              aria-label='close'\r\n              color='inherit'\r\n              size='small'\r\n              onClick={() => {\r\n                setOpenAlert0(false)\r\n              }}\r\n            >\r\n              <CloseIcon fontSize='inherit' />\r\n            </IconButton>\r\n          }\r\n        >\r\n          Cannot sell 0 stock!\r\n        </Alert>\r\n      </Collapse>\r\n      <Collapse in={openAlert}>\r\n        <Alert\r\n          severity='error'\r\n          action={\r\n            <IconButton\r\n              aria-label='close'\r\n              color='inherit'\r\n              size='small'\r\n              onClick={() => {\r\n                setOpenAlert(false)\r\n              }}\r\n            >\r\n              <CloseIcon fontSize='inherit' />\r\n            </IconButton>\r\n          }\r\n        >\r\n          Cannot sell more stock than owned!\r\n        </Alert>\r\n      </Collapse>\r\n      <h2 id='simple-modal-title'>Sell {currentStock.ticker}</h2>\r\n      <form>\r\n        <TextField\r\n          id='standard-number'\r\n          label='Volume'\r\n          type='number'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <Button type='submit' onClick={submitForm}>Confirm Sell</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <ColorButton onClick={handleOpen}>\r\n        Sell\r\n      </ColorButton>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='simple-modal-title'\r\n        aria-describedby='simple-modal-description'\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SellPrompt\r\n","C:\\React Projects\\Stonks\\src\\Components\\BuyPrompt.js",[],"C:\\React Projects\\Stonks\\src\\Components\\FeaturedTable.js",[],"C:\\React Projects\\Stonks\\src\\Components\\Portfolio.js",["113"],"import React from 'react'\r\nimport apiClient from '../Util/apiClient.js'\r\nimport { Container, Button } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport BuyPrompt from './BuyPrompt'\r\nimport SellPrompt from './SellPrompt'\r\n\r\nfunction Portfolio (props) {\r\n  const stockList = props.portfolio\r\n\r\n  const OuterContainer = withStyles({\r\n    root: {\r\n      border: 1,\r\n      height: 400,\r\n      marginLeft: 5,\r\n      padding: '0 5px',\r\n      float: 'right',\r\n      background: '#dedede'\r\n    }\r\n  })(Container)\r\n\r\n  const ViewButton = withStyles({\r\n    root: {\r\n      borderRadius: 3,\r\n      border: 0,\r\n      height: 40,\r\n      marginTop: 5,\r\n      marginLeft: 5,\r\n      padding: '0 5px',\r\n      float: 'right',\r\n      boxShadow: '2 1px 1px 1px black'\r\n    }\r\n  })(Button)\r\n\r\n  const Frame = withStyles({\r\n    root: {\r\n      border: 1,\r\n      borderRadius: 5,\r\n      height: 600,\r\n      background: '#dedede'\r\n    }\r\n  })(Container)\r\n\r\n  const InnerContainer = withStyles({\r\n    root: {\r\n      border: 1,\r\n      borderRadius: 5,\r\n      marginTop: 4,\r\n      marginBottom: 1,\r\n      padding: '0 5px',\r\n      float: 'right',\r\n      background: '#8C92AC',\r\n      boxShadow: '0 1px 3px 1px grey'\r\n    }\r\n  })(Container)\r\n\r\n  const ValueWithLabel = ({ label, symbol, value, backSymbol }) => (\r\n    <div>\r\n      <div>\r\n        <div> <b> {label} </b> {symbol}{value}{backSymbol} </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  function viewDetails (event) {\r\n    const ticker = event.target.parentElement.id || event.target.id || event.target.parentElement.parentElement.id\r\n    apiClient.getStock(ticker, props.setCurrentStock, 'detailed')\r\n  }\r\n\r\n  if (props.user.loggedIn && stockList != null) {\r\n    if (stockList.length === 0 || stockList[0] === false || stockList[stockList.length - 1].total <= 0) {\r\n      return (\r\n        <Frame>\r\n          <h1> Portfolio </h1>\r\n          <OuterContainer className='watchlist-box'>\r\n            <InnerContainer>\r\n              <h2> Buy stocks to start your portfolio! </h2>\r\n            </InnerContainer>\r\n          </OuterContainer>\r\n        </Frame>\r\n      )\r\n    } else {\r\n      return (\r\n        <Frame>\r\n          <div>\r\n            <h1>Portfolio</h1>\r\n            <h3>Account Value: ${stockList[stockList.length - 1].total}</h3>\r\n            <h3>Percent Change: {stockList[stockList.length - 1].totalChange}%</h3>\r\n          </div>\r\n          <OuterContainer className='watchlist-box'>\r\n            {stockList.map((stock) => {\r\n              const stockName = stock.ticker\r\n              const stockPerc = stock.percentage\r\n              const stockVolume = stock.volume\r\n              const positionValue = stock.posValue\r\n              const curPrice = stock.price\r\n              if (stockVolume > 0) {\r\n                return (\r\n                  <InnerContainer>\r\n                    <ViewButton id={stockName} variant='contained' onClick={viewDetails}> <b> View Details </b> </ViewButton>\r\n                    <SellPrompt currentStock={stock} loggedUsername={props.user.username} loggedIn={props.user.loggedIn}> </SellPrompt>\r\n                    <BuyPrompt currentStock={stock} loggedUsername={props.user.username} loggedIn={props.user.loggedIn}> </BuyPrompt>\r\n                    <ValueWithLabel label='Name:' value={stockName} />\r\n                    <ValueWithLabel label='Cur. Price:' symbol='$' value={curPrice} />\r\n                    <ValueWithLabel label='% Change:' backSymbol='%' value={stockPerc} />\r\n                    <ValueWithLabel label='Num. Shares:' value={stockVolume} />\r\n                    <ValueWithLabel label='Position Value:' symbol='$' value={positionValue} />\r\n                  </InnerContainer>\r\n                )\r\n              }\r\n            })}\r\n          </OuterContainer>\r\n        </Frame>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Portfolio\r\n","C:\\React Projects\\Stonks\\src\\Components\\MoversTable.js",[],"C:\\React Projects\\Stonks\\src\\Components\\DetailedStockTable.js",[],"C:\\React Projects\\Stonks\\src\\Components\\BasicStockTable.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":117,"column":13,"nodeType":"120","messageId":"121","endLine":117,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":35,"column":10,"nodeType":"120","messageId":"121","endLine":35,"endColumn":20},{"ruleId":"118","severity":1,"message":"123","line":39,"column":9,"nodeType":"120","messageId":"121","endLine":39,"endColumn":26},{"ruleId":"118","severity":1,"message":"124","line":51,"column":9,"nodeType":"120","messageId":"121","endLine":51,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":52,"column":28,"nodeType":"120","messageId":"127","endLine":52,"endColumn":38},{"ruleId":"118","severity":1,"message":"128","line":66,"column":13,"nodeType":"120","messageId":"121","endLine":66,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":91,"column":36,"nodeType":"131","messageId":"132","endLine":91,"endColumn":38},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'UserAccountTable' is defined but never used.","Identifier","unusedVar","'characters' is assigned a value but never used.","'componentDidMount' is assigned a value but never used.","'removeCharacter' is assigned a value but never used.","no-use-before-define","'characters' was used before it was defined.","usedBeforeDefined","'name' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]